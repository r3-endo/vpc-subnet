AWSTemplateFormatVersion: "2010-09-09"
Description: VPC and Subnrt Create

Mappings:
  StackConfig:
    VPC:
      CIDR: 10.1.0.0/16
    PublicSubnet1:
      CIDR: 10.1.0.0/24
    PublicSubnet2:
      CIDR: 10.1.1.0/24
    PrivateSubnet1:
      CIDR: 10.1.2.0/24
    PrivateSubnet2:
      CIDR: 10.1.3.0/24

Resources:
  #----------------------------------------------------------------
  # VPC
  #----------------------------------------------------------------
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap [StackConfig, VPC, CIDR]
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: ecs-vpc
  #----------------------------------------------------------------
  # InternetGateway
  #----------------------------------------------------------------
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: ecs-vpc-igw
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  #----------------------------------------------------------------
  # PublicRouteTable
  #----------------------------------------------------------------
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: AttachGateway
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ecs-public-route-table
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  #----------------------------------------------------------------
  # PublicSubnet1
  #----------------------------------------------------------------
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    DependsOn: AttachGateway
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !FindInMap [StackConfig, PublicSubnet1, CIDR]
      Tags:
        - Key: Name
          Value: Public Subnet 1
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  #----------------------------------------------------------------
  # PublicSubnet2
  #----------------------------------------------------------------
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    DependsOn: AttachGateway
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !FindInMap [StackConfig, PublicSubnet2, CIDR]
      Tags:
        - Key: Name
          Value: Public Subnet 2
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
  #----------------------------------------------------------------
  # PrivateRouteTable1
  #----------------------------------------------------------------
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ecs-private-route-table-1
  #----------------------------------------------------------------
  # PrivateRouteTable2
  #----------------------------------------------------------------
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ecs-private-route-table-2
  #----------------------------------------------------------------
  # PrivateSubnet1
  #----------------------------------------------------------------
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !FindInMap [StackConfig, PrivateSubnet1, CIDR]
      Tags:
        - Key: Name
          Value: Private Subnet 1
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1
  #----------------------------------------------------------------
  # PrivateSubnet2
  #----------------------------------------------------------------
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !FindInMap [StackConfig, PrivateSubnet2, CIDR]
      Tags:
        - Key: Name
          Value: Private Subnet 2
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2
